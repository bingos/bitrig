# $OpenBSD: run,v 1.1 2007/03/30 19:02:51 pedro Exp $
set -eu

IGNORE_ERRORS=1
MNTOPT=
#MNTOPT="-o log"
#MNTOPT="-o softdep"

totntest=0
totnfail=0

name253=`jot -r -c 253 a { | rs -g0 0 253`
name255=${name253}xx
name256=${name255}x
path1021=$name255/$name255/$name255/$name253
path1023=${path1021}/x
path1024=${path1023}x

setup() {
	dd if=/dev/zero of=fakeobj bs=2048 count=4k
	vnconfig vnd0 fakeobj
	newfs /dev/rvnd0c
	mount ${MNTOPT} /dev/vnd0c /mnt
}


# mount auxiliary fs
mountfs() {
	mount ${MNTOPT} $1 $2
}

# thin shell around 'fstest' to test and provide descriptive output
expect() {
	n=$ntest
	ntest=$((ntest + 1))
	expected=$1
	shift
	echo -n "#$n: $FSTEST $*"
	actual=`${FSTEST} $* 2>/dev/null | tail -1`
	echo "${actual}" | egrep '^'${expected}'$' >/dev/null 2>&1
	[ $? -eq 0 ] && { echo " OK"; return; }
	echo " ERROR"
	echo "#$n: expected $expected, got ${actual:-no result}"
	[ ${IGNORE_ERRORS} == 0 ] && exit 1
	nfail=$((nfail + 1))
}

# perform a simple check/assertion
test_check() {
	n=$ntest
	ntest=$((ntest + 1))
	echo -n "#$n: $*"
	[ $* ] && { echo " OK"; return; }
	echo " ERROR"
	[ ${IGNORE_ERRORS} == 0 ] && exit 1
	nfail=$((nfail + 1))
}

# generate a random file/directory name
namegen() {
	echo `dd if=/dev/urandom bs=1k count=1 2>/dev/null | sha1 | cut -c 32-`
}

setup

for arg in $*; do
	ntest=0
	nfail=0
	echo $arg:
	. $arg
	totntest=$((totntest + ntest))
	totnfail=$((totnfail + nfail))
done

echo "${totntest} tests completed, ${totnfail} failed"
